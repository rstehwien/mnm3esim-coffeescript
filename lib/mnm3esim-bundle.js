// Generated by CoffeeScript 1.4.0
(function() {
  var Modifiable, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty;

  _ = require('underscore');

  Modifiable = (function() {

    function Modifiable(data) {
      this._applyModifiers = __bind(this._applyModifiers, this);

      var k, v, _fn,
        _this = this;
      this._modifiers = {};
      _fn = function(k, v) {
        _this["_" + k] = v;
        return Object.defineProperty(_this, k, {
          get: function() {
            return this._applyModifiers(k, this["_" + k]);
          },
          set: function(v) {
            return this["_" + k] = v;
          },
          enumerable: true,
          configurable: true
        });
      };
      for (k in data) {
        if (!__hasProp.call(data, k)) continue;
        v = data[k];
        _fn(k, v);
      }
    }

    Modifiable.prototype._applyModifiers = function(k, v) {
      var m, modifiers, _i, _len;
      modifiers = [];
      if (this._modifiers[k] != null) {
        Array.prototype.push.apply(modifiers, this._modifiers[k]);
      }
      if (this._modifiers['ALL'] != null) {
        Array.prototype.push.apply(modifiers, this._modifiers['ALL']);
      }
      for (_i = 0, _len = modifiers.length; _i < _len; _i++) {
        m = modifiers[_i];
        v = m.call(this, v);
      }
      return v;
    };

    Modifiable.prototype.addModifier = function(k, m) {
      var _base, _ref;
      if ((_ref = (_base = this._modifiers)[k]) == null) {
        _base[k] = [];
      }
      return this._modifiers[k].push(m);
    };

    Modifiable.prototype.clearAllModifiers = function() {
      return this._modifiers = {};
    };

    Modifiable.prototype.clearModifiers = function(k) {
      return this._modifiers[k] = [];
    };

    return Modifiable;

  })();

  module.exports = {
    Modifiable: Modifiable
  };

}).call(this);
